import sys
import serial
import time


def send_command(ser, cmd):
    ser.write(cmd)
    time.sleep(0.001)


def send_commands(ser):
    send_command(ser, b'\xc3\x33')
    send_command(ser, b'\xd0\x00')
    send_command(ser, b'\xc5\x55')
    send_command(ser, b'\x00\x44')
    send_command(ser, b'\x10\x2e')
    send_command(ser, b'\x20\x31')
    send_command(ser, b'\x30\x34')
    send_command(ser, b'\x40\x2f')
    send_command(ser, b'\x50\x48')
    send_command(ser, b'\x60\x00')
    send_command(ser, b'\x78\x00')
    send_command(ser, b'\x80\x00')
    send_command(ser, b'\x90\x00')
    send_command(ser, b'\xa8\x00')
    send_command(ser, b'\xb0\x00')
    send_command(ser, b'\xe0\x01')
    send_command(ser, b'\xc5\x55')
    send_command(ser, b'\x00\x43')
    send_command(ser, b'\x10\x44')
    send_command(ser, b'\x20\x3c')
    send_command(ser, b'\x30\x4f')
    send_command(ser, b'\x40\x4e')
    send_command(ser, b'\x50\x4c')
    send_command(ser, b'\x60\x00')
    send_command(ser, b'\x78\x00')
    send_command(ser, b'\x88\x00')
    send_command(ser, b'\x90\x00')
    send_command(ser, b'\xa8\x00')
    send_command(ser, b'\xb8\x00')
    send_command(ser, b'\xe0\x01')
    send_command(ser, b'\xc5\x55')
    send_command(ser, b'\x00\x4e')
    send_command(ser, b'\x10\x39')
    send_command(ser, b'\x20\x43')
    send_command(ser, b'\x30\x44')
    send_command(ser, b'\x40\x4e')
    send_command(ser, b'\x50\x4c')
    send_command(ser, b'\x60\x00')
    send_command(ser, b'\x78\x00')
    send_command(ser, b'\x88\x00')
    send_command(ser, b'\x90\x00')
    send_command(ser, b'\xa8\x00')
    send_command(ser, b'\xb8\x00')
    send_command(ser, b'\xe0\x01')
    send_command(ser, b'\xc5\x55')
    send_command(ser, b'\x00\x43')
    send_command(ser, b'\x10\x44')
    send_command(ser, b'\x20\x2f')
    send_command(ser, b'\x30\x48')
    send_command(ser, b'\x40\x3c')
    send_command(ser, b'\x50\x4f')
    send_command(ser, b'\x60\x00')
    send_command(ser, b'\x78\x00')
    send_command(ser, b'\x80\x00')
    send_command(ser, b'\x90\x00')
    send_command(ser, b'\xa8\x00')
    send_command(ser, b'\xb0\x00')
    send_command(ser, b'\xe0\x01')
    send_command(ser, b'\xc5\x55')
    send_command(ser, b'\x00\x4e')
    send_command(ser, b'\x10\x39')
    send_command(ser, b'\x20\x44')
    send_command(ser, b'\x30\x2e')
    send_command(ser, b'\x40\x43')
    send_command(ser, b'\x50\x44')
    send_command(ser, b'\x60\x00')
    send_command(ser, b'\x78\x00')
    send_command(ser, b'\x80\x00')
    send_command(ser, b'\x90\x00')
    send_command(ser, b'\xa8\x00')
    send_command(ser, b'\xb0\x00')
    send_command(ser, b'\xe0\x01')
    send_command(ser, b'\xc5\x55')
    send_command(ser, b'\x00\x44')
    send_command(ser, b'\x10\x2e')
    send_command(ser, b'\x20\x2f')
    send_command(ser, b'\x30\x48')
    send_command(ser, b'\x40\x43')
    send_command(ser, b'\x50\x44')
    send_command(ser, b'\x60\x00')
    send_command(ser, b'\x78\x00')
    send_command(ser, b'\x88\x00')
    send_command(ser, b'\x90\x00')
    send_command(ser, b'\xa8\x00')
    send_command(ser, b'\xb8\x00')
    send_command(ser, b'\xe0\x01')
    send_command(ser, b'\xf0\x00')


def main(argv):
    if (len(argv) == 0):
        print("Usage: client.py <serial device>")
        exit(0)
    else:
        ser = serial.Serial(argv[0], baudrate=115200)
        send_commands(ser)
        ser.close()
    exit(0)


if __name__ == "__main__":
    main(sys.argv[1:])
